server {

    listen 80;
    listen [::]:80;
    server_name linus.habbfarm.net;
    return 301 https://$host$request_uri;

}

server {

    listen 443 ssl;
    server_name linus.habbfarm.net;

    ssl_certificate /etc/ssl/habbfarm.net_ecc/fullchain.cer;
    ssl_certificate_key /etc/ssl/habbfarm.net_ecc/habbfarm.net.key;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    # Set the access log location

    access_log            /var/log/nginx/reverse_proxy.log;


    location / {

    # Set the proxy headers

    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_set_header        X-Forwarded-Prefix /;

    # Configure which address the request is proxied to

    proxy_pass          http://10.31.83.3:80/;
    proxy_read_timeout  90;
    proxy_redirect      http://10.31.83.3:80 https://linus.habbfarm.net;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "origin";

    # Add the trailing slash
    rewrite ^([^.]*[^/])$ $1/ permanent;
    }

}

server {

    listen 80;
    listen [::]:80;
    server_name info.habbfarm.net;
    return 301 https://$host$request_uri;

}



server {

    listen 443 ssl;
    server_name info.habbfarm.net;

    ssl_certificate /etc/ssl/habbfarm.net_ecc/fullchain.cer;
    ssl_certificate_key /etc/ssl/habbfarm.net_ecc/habbfarm.net.key;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    # Set the access log location

    access_log            /var/log/nginx/reverse_proxy.log;


    location / {

    # Set the proxy headers

    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;

    # Configure which address the request is proxied to

    proxy_pass          http://10.31.8.9:80/;
    proxy_read_timeout  90;
    proxy_redirect      http://10.31.8.9:80 https://info.habbfarm.net;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "origin";

    # Add the trailing slash
    rewrite ^([^.]*[^/])$ $1/ permanent;
    }

}

server {

    listen 80;
    listen [::]:80;
    server_name media.habbestad.org;
    return 301 https://$host$request_uri;

}


server {

    listen 443 ssl;
    server_name media.habbestad.org;

    ssl_certificate /etc/ssl/habbestad.org_ecc/fullchain.cer;
    ssl_certificate_key /etc/ssl/habbestad.org_ecc/habbestad.org.key;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    ## The default `client_max_body_size` is 1M, this might not be enough for some posters, etc.
    client_max_body_size 20M;


    # Set the access log location

    access_log            /var/log/nginx/reverse_proxy.log;


    location / {
    # Proxy main Jellyfin traffic
    proxy_pass http://10.31.71.4:8096;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Protocol $scheme;
    proxy_set_header X-Forwarded-Host $http_host;

    # Disable buffering when the nginx proxy gets very resource heavy upon streaming
    proxy_buffering off;

    }

    # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/
    location = /web/ {
    # Proxy main Jellyfin traffic
    proxy_pass http://10.31.71.4:8096/web/index.html;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Protocol $scheme;
    proxy_set_header X-Forwarded-Host $http_host;
    }

    location /socket {
     # Proxy Jellyfin Websockets traffic
     proxy_pass http://10.31.71.4:8096;
     proxy_http_version 1.1;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection "upgrade";
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto $scheme;
     proxy_set_header X-Forwarded-Protocol $scheme;
     proxy_set_header X-Forwarded-Host $http_host;
    }
}
