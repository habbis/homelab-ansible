################
# glauth.conf

#################
# General configuration.
debug = true
# syslog = true
# structuredlog = true
#
# Enable hot-reload of configuration on changes
# - does NOT work [ldap], [ldaps], [backend] or [api] sections
# watchconfig = true

#################
# yubikeyclientid = "yubi-api-clientid"
# yubikeysecret = "yubi-api-secret"

#################
# Server configuration.
[ldap]
  enabled = true
  # run on a non privileged port
  listen = "0.0.0.0:3893"

[ldaps]
# to enable ldaps generate a certificate, eg. with:
# openssl req -x509 -newkey rsa:4096 -keyout glauth.key -out glauth.crt -days 365 -nodes -subj '/CN=`hostname`'
  enabled = true
  listen = "0.0.0.0:3894"
  cert = "/etc/ssl/int_wildcard.no.habbfarm.net.crt"
  key = "/etc/ssl/int_wildcard.no.habbfarm.net.key"

#################
# The backend section controls the data store.
[backend]
  datastore = "config"
  baseDN = "dc=no,dc=habbfarm,dc=net"
  nameformat = "cn"
  groupformat = "ou"
  #nameformat = "uid"
  #nameformat = "cn"
  #groupformat = "cn"

  # If you are using a client that requires reading the root DSE first
  # such as SSSD
  anonymousdse = true

  ## Configure dn format to use structures like
  ## "uid=serviceuser,cn=svcaccts,$BASEDN" instead of "cn=serviceuser,ou=svcaccts,$BASEDN"
  ## to help ease migrations from other LDAP systems
  # nameformat = "uid"
  # groupformat = "cn"

  ## Configure ssh-key attribute name, default is 'sshPublicKey'
  #sshkeyattr = "ipaSshPubKey"

[behaviors]
  # Ignore all capabilities restrictions, for instance allowing every user to perform a search
  IgnoreCapabilities = true
  # Enable a "fail2ban" type backoff mechanism temporarily banning repeated failed login attempts
  LimitFailedBinds = false
  # How many failed login attempts are allowed before a ban is imposed
  NumberOfFailedBinds = 3
  # How long (in seconds) is the window for failed login attempts
  PeriodOfFailedBinds = 10
  # How long (in seconds) is the ban duration
  BlockFailedBindsFor = 60
  # Clean learnt IP addresses every N seconds
  PruneSourceTableEvery = 600
  # Clean learnt IP addresses not seen in N seconds
  PruneSourcesOlderThan = 600

#################
# The users section contains a hardcoded list of valid users.
#   to create a passSHA256:   echo -n "mysecret" | openssl dgst -sha256

# This user record shows all of the possible fields available
[[users]]
  name = "ebbestad"
  givenname="Eirik"
  sn="Habbestad Helleve"
  mail = "habbis@habbestad.org"
  uidnumber = 5001
  primarygroup = 5500
  othergroups = [5501,5502,5503,5505,5506,5507,5508,5509,5510,5512]
  loginShell = "/bin/bash"
  homeDir = "/home/ebbestad"
  passsha256 = "81f3226247ef09373a12505b1225d002391cba75af20981829e702d70a2bb1a2"
  sshkeys = [
  "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINjYH5jmAWqYBdMj11FMuXu8CVlaUJgKoJu4982kYmtx ebbestad@devkey",
  "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIApgMZF4rkwdLBoK6pjNx78hX2DnzJIw1Ez9VpBpAJaA ebbestad@bastion",
  "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGCJ5z7dw8bTasOQbRw4eOF5zW0pf0AwlnQzHTUdkwGG eirik.habbestad.helleve@unityMac",
  ]


[[users]]
  name = "bind-ldap"
  uidnumber = 5002
  primarygroup = 5504
  passsha256 = "13e40d3544418571c2314e9e611073a8475e8db45624f81399e873ba48ba4111"
    [[users.capabilities]]
    action = "search"
    object = "*"

[[users]]
  name = "secret"
  uidnumber = 5002
  primarygroup = 5504
  othergroups = [5505]
  passsha256 = "71b530b20707f373e1f16cfcb83ec4942817df0bbaf3e80769087c237229f5ff"


#################
# The groups section contains a hardcoded list of valid users.
#
[[groups]]
  name = "accounts"
  gidnumber = 5500

[[groups]]
  name = "hf-admin"
  gidnumber = 5501

[[groups]]
  name = "hf-pfsense-admin"
  gidnumber = 5502

[[groups]]
  name = "hf-pfsense-user"
  gidnumber = 5503

[[groups]]
  name = "hf-bind"
  gidnumber = 5504

[[groups]]
  name = "repo01-user"
  gidnumber = 5505

[[groups]]
  name = "git-user"
  gidnumber = 5506

[[groups]]
  name = "git-admin"
  gidnumber = 5507

[[groups]]
  name = "repo01-admin"
  gidnumber = 5508

[[groups]]
  name = "hf-user"
  gidnumber = 5509

[[groups]]
  name = "hf-dns-admin"
  gidnumber = 5510

[[groups]]
  name = "hf-dns-operator"
  gidnumber = 5510

[[groups]]
  name = "hf-dns-user"
  gidnumber = 5511

# user ebbestad
[[groups]]
  name = "hf-virt-admin"
  gidnumber = 5512

[[groups]]
  name = "hf-virt-user"
  gidnumber = 5513


#################
# Enable and configure the optional REST API here.
[api]
  enabled = true
  internals = true # debug application performance
  tls = true # enable TLS for production!!
  listen = "0.0.0.0:5555"
  cert = "/etc/ssl/no.habbfarm.net.pem"
  key = "/etc/ssl/no.habbfarm.net.pem"
